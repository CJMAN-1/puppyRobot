
termproject_jinchang.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000648  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000648  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000648  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000678  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001294  00000000  00000000  000007c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a66  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007cc  00000000  00000000  000024be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ac  00000000  00000000  00002c8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b1f  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b5  00000000  00000000  00003a57  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000400c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	54 c0       	rjmp	.+168    	; 0xae <__vector_1>
   6:	00 00       	nop
   8:	5d c0       	rjmp	.+186    	; 0xc4 <__vector_2>
   a:	00 00       	nop
   c:	69 c0       	rjmp	.+210    	; 0xe0 <__vector_3>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	87 c0       	rjmp	.+270    	; 0x184 <__vector_29>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a8 30       	cpi	r26, 0x08	; 8
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	b8 d0       	rcall	.+368    	; 0x21a <main>
  aa:	92 c2       	rjmp	.+1316   	; 0x5d0 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_1>:





ISR(INT0_vect){
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
	
	PORTA = 0x00;
  b8:	1b ba       	out	0x1b, r1	; 27
}
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <__vector_2>:


ISR(INT1_vect){
  c4:	1f 92       	push	r1
  c6:	0f 92       	push	r0
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	0f 92       	push	r0
  cc:	11 24       	eor	r1, r1
  ce:	8f 93       	push	r24

	PORTA = 0xFF;	
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	8b bb       	out	0x1b, r24	; 27
}
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <__vector_3>:

ISR(INT2_vect){
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	0b b6       	in	r0, 0x3b	; 59
  ec:	0f 92       	push	r0
  ee:	2f 93       	push	r18
  f0:	3f 93       	push	r19
  f2:	4f 93       	push	r20
  f4:	5f 93       	push	r21
  f6:	6f 93       	push	r22
  f8:	7f 93       	push	r23
  fa:	8f 93       	push	r24
  fc:	9f 93       	push	r25
  fe:	af 93       	push	r26
 100:	bf 93       	push	r27
 102:	ef 93       	push	r30
 104:	ff 93       	push	r31
	if ((EICRA & 0b00110000) == 0b00100000)//falling //TCNT1당 0.064ms 34 cm/ms
 106:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 10a:	80 73       	andi	r24, 0x30	; 48
 10c:	80 32       	cpi	r24, 0x20	; 32
 10e:	01 f5       	brne	.+64     	; 0x150 <__vector_3+0x70>
	{
		u_end=TCNT2;
 110:	64 b5       	in	r22, 0x24	; 36
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	43 d1       	rcall	.+646    	; 0x3a0 <__floatunsisf>
 11a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <u_end>
 11e:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <u_end+0x1>
 122:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <u_end+0x2>
 126:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <u_end+0x3>
		u_distance= u_end* 2.176;
 12a:	26 e9       	ldi	r18, 0x96	; 150
 12c:	33 e4       	ldi	r19, 0x43	; 67
 12e:	4b e0       	ldi	r20, 0x0B	; 11
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	c4 d1       	rcall	.+904    	; 0x4bc <__mulsf3>
 134:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 138:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 13c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 140:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
		EICRA = (EICRA &0b11001111)| 0b00110000;//라이징으로 바꿈
 144:	ea e6       	ldi	r30, 0x6A	; 106
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	80 63       	ori	r24, 0x30	; 48
 14c:	80 83       	st	Z, r24
 14e:	07 c0       	rjmp	.+14     	; 0x15e <__vector_3+0x7e>
	}

	else//rising일때
	{
		TCNT2 = 0;
 150:	14 bc       	out	0x24, r1	; 36
		EICRA =(EICRA &0b11001111)| 0b00100000;//폴링으로 바꿈
 152:	ea e6       	ldi	r30, 0x6A	; 106
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	8f 7c       	andi	r24, 0xCF	; 207
 15a:	80 62       	ori	r24, 0x20	; 32
 15c:	80 83       	st	Z, r24
	}
}
 15e:	ff 91       	pop	r31
 160:	ef 91       	pop	r30
 162:	bf 91       	pop	r27
 164:	af 91       	pop	r26
 166:	9f 91       	pop	r25
 168:	8f 91       	pop	r24
 16a:	7f 91       	pop	r23
 16c:	6f 91       	pop	r22
 16e:	5f 91       	pop	r21
 170:	4f 91       	pop	r20
 172:	3f 91       	pop	r19
 174:	2f 91       	pop	r18
 176:	0f 90       	pop	r0
 178:	0b be       	out	0x3b, r0	; 59
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <__vector_29>:

//제어주기 : 20ms
ISR(TIMER3_OVF_vect){
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	0b b6       	in	r0, 0x3b	; 59
 190:	0f 92       	push	r0
 192:	2f 93       	push	r18
 194:	3f 93       	push	r19
 196:	4f 93       	push	r20
 198:	5f 93       	push	r21
 19a:	6f 93       	push	r22
 19c:	7f 93       	push	r23
 19e:	8f 93       	push	r24
 1a0:	9f 93       	push	r25
 1a2:	af 93       	push	r26
 1a4:	bf 93       	push	r27
 1a6:	ef 93       	push	r30
 1a8:	ff 93       	push	r31
	
	TCNT3 = 64285; // Bottom 설정
 1aa:	8d e1       	ldi	r24, 0x1D	; 29
 1ac:	9b ef       	ldi	r25, 0xFB	; 251
 1ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>

	Trigger();
 1b6:	b5 d0       	rcall	.+362    	; 0x322 <Trigger>
	
	TransNumUart1(u_distance);
 1b8:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 1bc:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 1c0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 1c4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 1c8:	ba d0       	rcall	.+372    	; 0x33e <__fixsfsi>
 1ca:	cb 01       	movw	r24, r22
 1cc:	86 d0       	rcall	.+268    	; 0x2da <TransNumUart1>
	TransUart1(',');
 1ce:	8c e2       	ldi	r24, 0x2C	; 44
 1d0:	7c d0       	rcall	.+248    	; 0x2ca <TransUart1>
 1d2:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <u_end>
	TransNumUart1(u_end);
 1d6:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <u_end+0x1>
 1da:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <u_end+0x2>
 1de:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <u_end+0x3>
 1e2:	ad d0       	rcall	.+346    	; 0x33e <__fixsfsi>
 1e4:	cb 01       	movw	r24, r22
 1e6:	79 d0       	rcall	.+242    	; 0x2da <TransNumUart1>

	TransUart1(13);
 1e8:	8d e0       	ldi	r24, 0x0D	; 13
 1ea:	6f d0       	rcall	.+222    	; 0x2ca <TransUart1>
 1ec:	1b bc       	out	0x2b, r1	; 43
	



	//모터제어
	OCR1A = 0;
 1ee:	1a bc       	out	0x2a, r1	; 42
 1f0:	19 bc       	out	0x29, r1	; 41
	OCR1B = 0;
 1f2:	18 bc       	out	0x28, r1	; 40
 1f4:	ff 91       	pop	r31
}
 1f6:	ef 91       	pop	r30
 1f8:	bf 91       	pop	r27
 1fa:	af 91       	pop	r26
 1fc:	9f 91       	pop	r25
 1fe:	8f 91       	pop	r24
 200:	7f 91       	pop	r23
 202:	6f 91       	pop	r22
 204:	5f 91       	pop	r21
 206:	4f 91       	pop	r20
 208:	3f 91       	pop	r19
 20a:	2f 91       	pop	r18
 20c:	0f 90       	pop	r0
 20e:	0b be       	out	0x3b, r0	; 59
 210:	0f 90       	pop	r0
 212:	0f be       	out	0x3f, r0	; 63
 214:	0f 90       	pop	r0
 216:	1f 90       	pop	r1
 218:	18 95       	reti

0000021a <main>:
 21a:	09 d0       	rcall	.+18     	; 0x22e <InitIO>

int main(void)
{
    /* Replace with your application code */
	InitIO();
	InitExtInt();
 21c:	0f d0       	rcall	.+30     	; 0x23c <InitExtInt>
	InitTimer1(); // 모터제어
 21e:	15 d0       	rcall	.+42     	; 0x24a <InitTimer1>
	InitTimer2(); // 초음파 시간 재는거
 220:	21 d0       	rcall	.+66     	; 0x264 <InitTimer2>
	InitTimer3(); // 제어주기
 222:	25 d0       	rcall	.+74     	; 0x26e <InitTimer3>
 224:	32 d0       	rcall	.+100    	; 0x28a <InitADC>
	InitADC();
 226:	36 d0       	rcall	.+108    	; 0x294 <InitUart0>
 228:	40 d0       	rcall	.+128    	; 0x2aa <InitUart1>
	InitUart0();
 22a:	78 94       	sei
 22c:	ff cf       	rjmp	.-2      	; 0x22c <main+0x12>

0000022e <InitIO>:
	InitUart1();
 22e:	8f ef       	ldi	r24, 0xFF	; 255
 230:	8a bb       	out	0x1a, r24	; 26
	
	sei();
 232:	84 bb       	out	0x14, r24	; 20
 234:	11 ba       	out	0x11, r1	; 17
	depth = (double)(value-WATER_MIN)/(WATER_MAX-WATER_MIN);
	depth = depth/25;

	return depth;

}
 236:	15 ba       	out	0x15, r1	; 21
 238:	8b bb       	out	0x1b, r24	; 27
 23a:	08 95       	ret

0000023c <InitExtInt>:
 23c:	11 ba       	out	0x11, r1	; 17
 23e:	8a e3       	ldi	r24, 0x3A	; 58
 240:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 244:	87 e0       	ldi	r24, 0x07	; 7
 246:	89 bf       	out	0x39, r24	; 57
 248:	08 95       	ret

0000024a <InitTimer1>:
 24a:	82 ea       	ldi	r24, 0xA2	; 162
 24c:	8f bd       	out	0x2f, r24	; 47
 24e:	89 e1       	ldi	r24, 0x19	; 25
 250:	8e bd       	out	0x2e, r24	; 46
 252:	80 e2       	ldi	r24, 0x20	; 32
 254:	93 e0       	ldi	r25, 0x03	; 3
 256:	97 bd       	out	0x27, r25	; 39
 258:	86 bd       	out	0x26, r24	; 38
 25a:	1b bc       	out	0x2b, r1	; 43
 25c:	1a bc       	out	0x2a, r1	; 42
 25e:	19 bc       	out	0x29, r1	; 41
 260:	18 bc       	out	0x28, r1	; 40
 262:	08 95       	ret

00000264 <InitTimer2>:
 264:	85 e0       	ldi	r24, 0x05	; 5
 266:	85 bd       	out	0x25, r24	; 37
 268:	84 e6       	ldi	r24, 0x64	; 100
 26a:	84 bd       	out	0x24, r24	; 36
 26c:	08 95       	ret

0000026e <InitTimer3>:
 26e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 272:	84 e0       	ldi	r24, 0x04	; 4
 274:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 278:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
 27c:	8d e1       	ldi	r24, 0x1D	; 29
 27e:	9b ef       	ldi	r25, 0xFB	; 251
 280:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 284:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 288:	08 95       	ret

0000028a <InitADC>:
 28a:	80 e4       	ldi	r24, 0x40	; 64
 28c:	87 b9       	out	0x07, r24	; 7
 28e:	87 e8       	ldi	r24, 0x87	; 135
 290:	86 b9       	out	0x06, r24	; 6
 292:	08 95       	ret

00000294 <InitUart0>:
 294:	83 e0       	ldi	r24, 0x03	; 3
 296:	82 b9       	out	0x02, r24	; 2
 298:	1b b8       	out	0x0b, r1	; 11
 29a:	88 e1       	ldi	r24, 0x18	; 24
 29c:	8a b9       	out	0x0a, r24	; 10
 29e:	86 e0       	ldi	r24, 0x06	; 6
 2a0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 2a4:	88 e0       	ldi	r24, 0x08	; 8
 2a6:	89 b9       	out	0x09, r24	; 9
 2a8:	08 95       	ret

000002aa <InitUart1>:
 2aa:	81 b3       	in	r24, 0x11	; 17
 2ac:	83 7f       	andi	r24, 0xF3	; 243
 2ae:	88 60       	ori	r24, 0x08	; 8
 2b0:	81 bb       	out	0x11, r24	; 17
 2b2:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 2b6:	88 e1       	ldi	r24, 0x18	; 24
 2b8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 2bc:	86 e0       	ldi	r24, 0x06	; 6
 2be:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 2c2:	88 e0       	ldi	r24, 0x08	; 8
 2c4:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2c8:	08 95       	ret

000002ca <TransUart1>:
 2ca:	eb e9       	ldi	r30, 0x9B	; 155
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	90 81       	ld	r25, Z
 2d0:	95 ff       	sbrs	r25, 5
 2d2:	fd cf       	rjmp	.-6      	; 0x2ce <TransUart1+0x4>
 2d4:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 2d8:	08 95       	ret

000002da <TransNumUart1>:
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	ec 01       	movw	r28, r24
 2e0:	68 ee       	ldi	r22, 0xE8	; 232
 2e2:	73 e0       	ldi	r23, 0x03	; 3
 2e4:	4e d1       	rcall	.+668    	; 0x582 <__divmodhi4>
 2e6:	80 e3       	ldi	r24, 0x30	; 48
 2e8:	86 0f       	add	r24, r22
 2ea:	ef df       	rcall	.-34     	; 0x2ca <TransUart1>
 2ec:	24 e6       	ldi	r18, 0x64	; 100
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	ce 01       	movw	r24, r28
 2f2:	b9 01       	movw	r22, r18
 2f4:	46 d1       	rcall	.+652    	; 0x582 <__divmodhi4>
 2f6:	cb 01       	movw	r24, r22
 2f8:	b9 01       	movw	r22, r18
 2fa:	43 d1       	rcall	.+646    	; 0x582 <__divmodhi4>
 2fc:	80 5d       	subi	r24, 0xD0	; 208
 2fe:	e5 df       	rcall	.-54     	; 0x2ca <TransUart1>
 300:	2a e0       	ldi	r18, 0x0A	; 10
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	ce 01       	movw	r24, r28
 306:	b9 01       	movw	r22, r18
 308:	3c d1       	rcall	.+632    	; 0x582 <__divmodhi4>
 30a:	c8 2f       	mov	r28, r24
 30c:	cb 01       	movw	r24, r22
 30e:	b9 01       	movw	r22, r18
 310:	38 d1       	rcall	.+624    	; 0x582 <__divmodhi4>
 312:	80 5d       	subi	r24, 0xD0	; 208
 314:	da df       	rcall	.-76     	; 0x2ca <TransUart1>
 316:	80 e3       	ldi	r24, 0x30	; 48
 318:	8c 0f       	add	r24, r28
 31a:	d7 df       	rcall	.-82     	; 0x2ca <TransUart1>
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	08 95       	ret

00000322 <Trigger>:
//CalTHEMISTER
// Input :
// Output : 
//////////////////////////////////////////////////////////////////
void Trigger(){
	PORTC = 0xfe;
 322:	8e ef       	ldi	r24, 0xFE	; 254
 324:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 326:	9a e0       	ldi	r25, 0x0A	; 10
 328:	9a 95       	dec	r25
 32a:	f1 f7       	brne	.-4      	; 0x328 <Trigger+0x6>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <Trigger+0xc>
	_delay_us(2);
	PORTC = 0x01;
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	95 bb       	out	0x15, r25	; 21
 332:	95 e3       	ldi	r25, 0x35	; 53
 334:	9a 95       	dec	r25
 336:	f1 f7       	brne	.-4      	; 0x334 <Trigger+0x12>
 338:	00 00       	nop
	_delay_us(10);
	PORTC = 0xfe;
 33a:	85 bb       	out	0x15, r24	; 21
 33c:	08 95       	ret

0000033e <__fixsfsi>:
 33e:	04 d0       	rcall	.+8      	; 0x348 <__fixunssfsi>
 340:	68 94       	set
 342:	b1 11       	cpse	r27, r1
 344:	b5 c0       	rjmp	.+362    	; 0x4b0 <__fp_szero>
 346:	08 95       	ret

00000348 <__fixunssfsi>:
 348:	98 d0       	rcall	.+304    	; 0x47a <__fp_splitA>
 34a:	88 f0       	brcs	.+34     	; 0x36e <__fixunssfsi+0x26>
 34c:	9f 57       	subi	r25, 0x7F	; 127
 34e:	90 f0       	brcs	.+36     	; 0x374 <__fixunssfsi+0x2c>
 350:	b9 2f       	mov	r27, r25
 352:	99 27       	eor	r25, r25
 354:	b7 51       	subi	r27, 0x17	; 23
 356:	a0 f0       	brcs	.+40     	; 0x380 <__fixunssfsi+0x38>
 358:	d1 f0       	breq	.+52     	; 0x38e <__fixunssfsi+0x46>
 35a:	66 0f       	add	r22, r22
 35c:	77 1f       	adc	r23, r23
 35e:	88 1f       	adc	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	1a f0       	brmi	.+6      	; 0x36a <__fixunssfsi+0x22>
 364:	ba 95       	dec	r27
 366:	c9 f7       	brne	.-14     	; 0x35a <__fixunssfsi+0x12>
 368:	12 c0       	rjmp	.+36     	; 0x38e <__fixunssfsi+0x46>
 36a:	b1 30       	cpi	r27, 0x01	; 1
 36c:	81 f0       	breq	.+32     	; 0x38e <__fixunssfsi+0x46>
 36e:	9f d0       	rcall	.+318    	; 0x4ae <__fp_zero>
 370:	b1 e0       	ldi	r27, 0x01	; 1
 372:	08 95       	ret
 374:	9c c0       	rjmp	.+312    	; 0x4ae <__fp_zero>
 376:	67 2f       	mov	r22, r23
 378:	78 2f       	mov	r23, r24
 37a:	88 27       	eor	r24, r24
 37c:	b8 5f       	subi	r27, 0xF8	; 248
 37e:	39 f0       	breq	.+14     	; 0x38e <__fixunssfsi+0x46>
 380:	b9 3f       	cpi	r27, 0xF9	; 249
 382:	cc f3       	brlt	.-14     	; 0x376 <__fixunssfsi+0x2e>
 384:	86 95       	lsr	r24
 386:	77 95       	ror	r23
 388:	67 95       	ror	r22
 38a:	b3 95       	inc	r27
 38c:	d9 f7       	brne	.-10     	; 0x384 <__fixunssfsi+0x3c>
 38e:	3e f4       	brtc	.+14     	; 0x39e <__fixunssfsi+0x56>
 390:	90 95       	com	r25
 392:	80 95       	com	r24
 394:	70 95       	com	r23
 396:	61 95       	neg	r22
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	08 95       	ret

000003a0 <__floatunsisf>:
 3a0:	e8 94       	clt
 3a2:	09 c0       	rjmp	.+18     	; 0x3b6 <__floatsisf+0x12>

000003a4 <__floatsisf>:
 3a4:	97 fb       	bst	r25, 7
 3a6:	3e f4       	brtc	.+14     	; 0x3b6 <__floatsisf+0x12>
 3a8:	90 95       	com	r25
 3aa:	80 95       	com	r24
 3ac:	70 95       	com	r23
 3ae:	61 95       	neg	r22
 3b0:	7f 4f       	sbci	r23, 0xFF	; 255
 3b2:	8f 4f       	sbci	r24, 0xFF	; 255
 3b4:	9f 4f       	sbci	r25, 0xFF	; 255
 3b6:	99 23       	and	r25, r25
 3b8:	a9 f0       	breq	.+42     	; 0x3e4 <__floatsisf+0x40>
 3ba:	f9 2f       	mov	r31, r25
 3bc:	96 e9       	ldi	r25, 0x96	; 150
 3be:	bb 27       	eor	r27, r27
 3c0:	93 95       	inc	r25
 3c2:	f6 95       	lsr	r31
 3c4:	87 95       	ror	r24
 3c6:	77 95       	ror	r23
 3c8:	67 95       	ror	r22
 3ca:	b7 95       	ror	r27
 3cc:	f1 11       	cpse	r31, r1
 3ce:	f8 cf       	rjmp	.-16     	; 0x3c0 <__floatsisf+0x1c>
 3d0:	fa f4       	brpl	.+62     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3d2:	bb 0f       	add	r27, r27
 3d4:	11 f4       	brne	.+4      	; 0x3da <__floatsisf+0x36>
 3d6:	60 ff       	sbrs	r22, 0
 3d8:	1b c0       	rjmp	.+54     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3da:	6f 5f       	subi	r22, 0xFF	; 255
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	16 c0       	rjmp	.+44     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e4:	88 23       	and	r24, r24
 3e6:	11 f0       	breq	.+4      	; 0x3ec <__floatsisf+0x48>
 3e8:	96 e9       	ldi	r25, 0x96	; 150
 3ea:	11 c0       	rjmp	.+34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ec:	77 23       	and	r23, r23
 3ee:	21 f0       	breq	.+8      	; 0x3f8 <__floatsisf+0x54>
 3f0:	9e e8       	ldi	r25, 0x8E	; 142
 3f2:	87 2f       	mov	r24, r23
 3f4:	76 2f       	mov	r23, r22
 3f6:	05 c0       	rjmp	.+10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f8:	66 23       	and	r22, r22
 3fa:	71 f0       	breq	.+28     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fc:	96 e8       	ldi	r25, 0x86	; 134
 3fe:	86 2f       	mov	r24, r22
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	2a f0       	brmi	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	9a 95       	dec	r25
 408:	66 0f       	add	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	da f7       	brpl	.-10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 410:	88 0f       	add	r24, r24
 412:	96 95       	lsr	r25
 414:	87 95       	ror	r24
 416:	97 f9       	bld	r25, 7
 418:	08 95       	ret

0000041a <__fp_inf>:
 41a:	97 f9       	bld	r25, 7
 41c:	9f 67       	ori	r25, 0x7F	; 127
 41e:	80 e8       	ldi	r24, 0x80	; 128
 420:	70 e0       	ldi	r23, 0x00	; 0
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	08 95       	ret

00000426 <__fp_nan>:
 426:	9f ef       	ldi	r25, 0xFF	; 255
 428:	80 ec       	ldi	r24, 0xC0	; 192
 42a:	08 95       	ret

0000042c <__fp_pscA>:
 42c:	00 24       	eor	r0, r0
 42e:	0a 94       	dec	r0
 430:	16 16       	cp	r1, r22
 432:	17 06       	cpc	r1, r23
 434:	18 06       	cpc	r1, r24
 436:	09 06       	cpc	r0, r25
 438:	08 95       	ret

0000043a <__fp_pscB>:
 43a:	00 24       	eor	r0, r0
 43c:	0a 94       	dec	r0
 43e:	12 16       	cp	r1, r18
 440:	13 06       	cpc	r1, r19
 442:	14 06       	cpc	r1, r20
 444:	05 06       	cpc	r0, r21
 446:	08 95       	ret

00000448 <__fp_round>:
 448:	09 2e       	mov	r0, r25
 44a:	03 94       	inc	r0
 44c:	00 0c       	add	r0, r0
 44e:	11 f4       	brne	.+4      	; 0x454 <__fp_round+0xc>
 450:	88 23       	and	r24, r24
 452:	52 f0       	brmi	.+20     	; 0x468 <__fp_round+0x20>
 454:	bb 0f       	add	r27, r27
 456:	40 f4       	brcc	.+16     	; 0x468 <__fp_round+0x20>
 458:	bf 2b       	or	r27, r31
 45a:	11 f4       	brne	.+4      	; 0x460 <__fp_round+0x18>
 45c:	60 ff       	sbrs	r22, 0
 45e:	04 c0       	rjmp	.+8      	; 0x468 <__fp_round+0x20>
 460:	6f 5f       	subi	r22, 0xFF	; 255
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	08 95       	ret

0000046a <__fp_split3>:
 46a:	57 fd       	sbrc	r21, 7
 46c:	90 58       	subi	r25, 0x80	; 128
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	59 f0       	breq	.+22     	; 0x48a <__fp_splitA+0x10>
 474:	5f 3f       	cpi	r21, 0xFF	; 255
 476:	71 f0       	breq	.+28     	; 0x494 <__fp_splitA+0x1a>
 478:	47 95       	ror	r20

0000047a <__fp_splitA>:
 47a:	88 0f       	add	r24, r24
 47c:	97 fb       	bst	r25, 7
 47e:	99 1f       	adc	r25, r25
 480:	61 f0       	breq	.+24     	; 0x49a <__fp_splitA+0x20>
 482:	9f 3f       	cpi	r25, 0xFF	; 255
 484:	79 f0       	breq	.+30     	; 0x4a4 <__fp_splitA+0x2a>
 486:	87 95       	ror	r24
 488:	08 95       	ret
 48a:	12 16       	cp	r1, r18
 48c:	13 06       	cpc	r1, r19
 48e:	14 06       	cpc	r1, r20
 490:	55 1f       	adc	r21, r21
 492:	f2 cf       	rjmp	.-28     	; 0x478 <__fp_split3+0xe>
 494:	46 95       	lsr	r20
 496:	f1 df       	rcall	.-30     	; 0x47a <__fp_splitA>
 498:	08 c0       	rjmp	.+16     	; 0x4aa <__fp_splitA+0x30>
 49a:	16 16       	cp	r1, r22
 49c:	17 06       	cpc	r1, r23
 49e:	18 06       	cpc	r1, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	f1 cf       	rjmp	.-30     	; 0x486 <__fp_splitA+0xc>
 4a4:	86 95       	lsr	r24
 4a6:	71 05       	cpc	r23, r1
 4a8:	61 05       	cpc	r22, r1
 4aa:	08 94       	sec
 4ac:	08 95       	ret

000004ae <__fp_zero>:
 4ae:	e8 94       	clt

000004b0 <__fp_szero>:
 4b0:	bb 27       	eor	r27, r27
 4b2:	66 27       	eor	r22, r22
 4b4:	77 27       	eor	r23, r23
 4b6:	cb 01       	movw	r24, r22
 4b8:	97 f9       	bld	r25, 7
 4ba:	08 95       	ret

000004bc <__mulsf3>:
 4bc:	0b d0       	rcall	.+22     	; 0x4d4 <__mulsf3x>
 4be:	c4 cf       	rjmp	.-120    	; 0x448 <__fp_round>
 4c0:	b5 df       	rcall	.-150    	; 0x42c <__fp_pscA>
 4c2:	28 f0       	brcs	.+10     	; 0x4ce <__mulsf3+0x12>
 4c4:	ba df       	rcall	.-140    	; 0x43a <__fp_pscB>
 4c6:	18 f0       	brcs	.+6      	; 0x4ce <__mulsf3+0x12>
 4c8:	95 23       	and	r25, r21
 4ca:	09 f0       	breq	.+2      	; 0x4ce <__mulsf3+0x12>
 4cc:	a6 cf       	rjmp	.-180    	; 0x41a <__fp_inf>
 4ce:	ab cf       	rjmp	.-170    	; 0x426 <__fp_nan>
 4d0:	11 24       	eor	r1, r1
 4d2:	ee cf       	rjmp	.-36     	; 0x4b0 <__fp_szero>

000004d4 <__mulsf3x>:
 4d4:	ca df       	rcall	.-108    	; 0x46a <__fp_split3>
 4d6:	a0 f3       	brcs	.-24     	; 0x4c0 <__mulsf3+0x4>

000004d8 <__mulsf3_pse>:
 4d8:	95 9f       	mul	r25, r21
 4da:	d1 f3       	breq	.-12     	; 0x4d0 <__mulsf3+0x14>
 4dc:	95 0f       	add	r25, r21
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	55 1f       	adc	r21, r21
 4e2:	62 9f       	mul	r22, r18
 4e4:	f0 01       	movw	r30, r0
 4e6:	72 9f       	mul	r23, r18
 4e8:	bb 27       	eor	r27, r27
 4ea:	f0 0d       	add	r31, r0
 4ec:	b1 1d       	adc	r27, r1
 4ee:	63 9f       	mul	r22, r19
 4f0:	aa 27       	eor	r26, r26
 4f2:	f0 0d       	add	r31, r0
 4f4:	b1 1d       	adc	r27, r1
 4f6:	aa 1f       	adc	r26, r26
 4f8:	64 9f       	mul	r22, r20
 4fa:	66 27       	eor	r22, r22
 4fc:	b0 0d       	add	r27, r0
 4fe:	a1 1d       	adc	r26, r1
 500:	66 1f       	adc	r22, r22
 502:	82 9f       	mul	r24, r18
 504:	22 27       	eor	r18, r18
 506:	b0 0d       	add	r27, r0
 508:	a1 1d       	adc	r26, r1
 50a:	62 1f       	adc	r22, r18
 50c:	73 9f       	mul	r23, r19
 50e:	b0 0d       	add	r27, r0
 510:	a1 1d       	adc	r26, r1
 512:	62 1f       	adc	r22, r18
 514:	83 9f       	mul	r24, r19
 516:	a0 0d       	add	r26, r0
 518:	61 1d       	adc	r22, r1
 51a:	22 1f       	adc	r18, r18
 51c:	74 9f       	mul	r23, r20
 51e:	33 27       	eor	r19, r19
 520:	a0 0d       	add	r26, r0
 522:	61 1d       	adc	r22, r1
 524:	23 1f       	adc	r18, r19
 526:	84 9f       	mul	r24, r20
 528:	60 0d       	add	r22, r0
 52a:	21 1d       	adc	r18, r1
 52c:	82 2f       	mov	r24, r18
 52e:	76 2f       	mov	r23, r22
 530:	6a 2f       	mov	r22, r26
 532:	11 24       	eor	r1, r1
 534:	9f 57       	subi	r25, 0x7F	; 127
 536:	50 40       	sbci	r21, 0x00	; 0
 538:	8a f0       	brmi	.+34     	; 0x55c <__mulsf3_pse+0x84>
 53a:	e1 f0       	breq	.+56     	; 0x574 <__mulsf3_pse+0x9c>
 53c:	88 23       	and	r24, r24
 53e:	4a f0       	brmi	.+18     	; 0x552 <__mulsf3_pse+0x7a>
 540:	ee 0f       	add	r30, r30
 542:	ff 1f       	adc	r31, r31
 544:	bb 1f       	adc	r27, r27
 546:	66 1f       	adc	r22, r22
 548:	77 1f       	adc	r23, r23
 54a:	88 1f       	adc	r24, r24
 54c:	91 50       	subi	r25, 0x01	; 1
 54e:	50 40       	sbci	r21, 0x00	; 0
 550:	a9 f7       	brne	.-22     	; 0x53c <__mulsf3_pse+0x64>
 552:	9e 3f       	cpi	r25, 0xFE	; 254
 554:	51 05       	cpc	r21, r1
 556:	70 f0       	brcs	.+28     	; 0x574 <__mulsf3_pse+0x9c>
 558:	60 cf       	rjmp	.-320    	; 0x41a <__fp_inf>
 55a:	aa cf       	rjmp	.-172    	; 0x4b0 <__fp_szero>
 55c:	5f 3f       	cpi	r21, 0xFF	; 255
 55e:	ec f3       	brlt	.-6      	; 0x55a <__mulsf3_pse+0x82>
 560:	98 3e       	cpi	r25, 0xE8	; 232
 562:	dc f3       	brlt	.-10     	; 0x55a <__mulsf3_pse+0x82>
 564:	86 95       	lsr	r24
 566:	77 95       	ror	r23
 568:	67 95       	ror	r22
 56a:	b7 95       	ror	r27
 56c:	f7 95       	ror	r31
 56e:	e7 95       	ror	r30
 570:	9f 5f       	subi	r25, 0xFF	; 255
 572:	c1 f7       	brne	.-16     	; 0x564 <__mulsf3_pse+0x8c>
 574:	fe 2b       	or	r31, r30
 576:	88 0f       	add	r24, r24
 578:	91 1d       	adc	r25, r1
 57a:	96 95       	lsr	r25
 57c:	87 95       	ror	r24
 57e:	97 f9       	bld	r25, 7
 580:	08 95       	ret

00000582 <__divmodhi4>:
 582:	97 fb       	bst	r25, 7
 584:	07 2e       	mov	r0, r23
 586:	16 f4       	brtc	.+4      	; 0x58c <__divmodhi4+0xa>
 588:	00 94       	com	r0
 58a:	06 d0       	rcall	.+12     	; 0x598 <__divmodhi4_neg1>
 58c:	77 fd       	sbrc	r23, 7
 58e:	08 d0       	rcall	.+16     	; 0x5a0 <__divmodhi4_neg2>
 590:	0b d0       	rcall	.+22     	; 0x5a8 <__udivmodhi4>
 592:	07 fc       	sbrc	r0, 7
 594:	05 d0       	rcall	.+10     	; 0x5a0 <__divmodhi4_neg2>
 596:	3e f4       	brtc	.+14     	; 0x5a6 <__divmodhi4_exit>

00000598 <__divmodhi4_neg1>:
 598:	90 95       	com	r25
 59a:	81 95       	neg	r24
 59c:	9f 4f       	sbci	r25, 0xFF	; 255
 59e:	08 95       	ret

000005a0 <__divmodhi4_neg2>:
 5a0:	70 95       	com	r23
 5a2:	61 95       	neg	r22
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255

000005a6 <__divmodhi4_exit>:
 5a6:	08 95       	ret

000005a8 <__udivmodhi4>:
 5a8:	aa 1b       	sub	r26, r26
 5aa:	bb 1b       	sub	r27, r27
 5ac:	51 e1       	ldi	r21, 0x11	; 17
 5ae:	07 c0       	rjmp	.+14     	; 0x5be <__udivmodhi4_ep>

000005b0 <__udivmodhi4_loop>:
 5b0:	aa 1f       	adc	r26, r26
 5b2:	bb 1f       	adc	r27, r27
 5b4:	a6 17       	cp	r26, r22
 5b6:	b7 07       	cpc	r27, r23
 5b8:	10 f0       	brcs	.+4      	; 0x5be <__udivmodhi4_ep>
 5ba:	a6 1b       	sub	r26, r22
 5bc:	b7 0b       	sbc	r27, r23

000005be <__udivmodhi4_ep>:
 5be:	88 1f       	adc	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	5a 95       	dec	r21
 5c4:	a9 f7       	brne	.-22     	; 0x5b0 <__udivmodhi4_loop>
 5c6:	80 95       	com	r24
 5c8:	90 95       	com	r25
 5ca:	bc 01       	movw	r22, r24
 5cc:	cd 01       	movw	r24, r26
 5ce:	08 95       	ret

000005d0 <_exit>:
 5d0:	f8 94       	cli

000005d2 <__stop_program>:
 5d2:	ff cf       	rjmp	.-2      	; 0x5d2 <__stop_program>
